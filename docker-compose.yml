version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: datacrm
      POSTGRES_USER: datacrm_user
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - datacrm_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - datacrm_network
    restart: unless-stopped

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: 8000
      DATABASE_URL: postgresql://datacrm_user:secure_password_123@postgres:5432/datacrm
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      OPENAI_API_KEY: your-openai-api-key
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - datacrm_network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_APP_NAME: DataCRM
      NEXT_PUBLIC_ENABLE_AI_FEATURES: "true"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - datacrm_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - datacrm_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  datacrm_network:
    driver: bridge
